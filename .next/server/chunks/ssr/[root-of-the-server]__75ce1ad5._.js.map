{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":["file:///home/viv/Desktop/ML-Specialization/mdx-components.tsx"],"sourcesContent":["import defaultMdxComponents from 'fumadocs-ui/mdx';\nimport type { MDXComponents } from 'mdx/types';\n\n// use this function to get MDX components, you will need it for rendering MDX\nexport function getMDXComponents(components?: MDXComponents): MDXComponents {\n  return {\n    ...defaultMdxComponents,\n    ...components,\n  };\n}\n"],"names":[],"mappings":";;;;AAAA;AAAA;;AAIO,SAAS,iBAAiB,UAA0B;IACzD,OAAO;QACL,GAAG,wJAAoB;QACvB,GAAG,UAAU;IACf;AACF","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///home/viv/Desktop/ML-Specialization/app/ml/%5B%5B...slug%5D%5D/page.tsx"],"sourcesContent":["import { getPageImage, source } from '@/lib/source';\nimport {\n  DocsBody,\n  DocsDescription,\n  DocsPage,\n  DocsTitle,\n} from 'fumadocs-ui/page';\nimport { notFound } from 'next/navigation';\nimport { getMDXComponents } from '@/mdx-components';\nimport type { Metadata } from 'next';\nimport { createRelativeLink } from 'fumadocs-ui/mdx';\n\nexport default async function Page(props: PageProps<'/ml/[[...slug]]'>) {\n  const params = await props.params;\n  const page = source.getPage(params.slug);\n  if (!page) notFound();\n\n  const MDX = page.data.body;\n\n  return (\n    <DocsPage toc={page.data.toc} full={page.data.full}>\n      <DocsTitle>{page.data.title}</DocsTitle>\n      <DocsDescription>{page.data.description}</DocsDescription>\n      <DocsBody>\n        <MDX\n          components={getMDXComponents({\n            // this allows you to link to other pages with relative file paths\n            a: createRelativeLink(source, page),\n          })}\n        />\n      </DocsBody>\n    </DocsPage>\n  );\n}\n\nexport async function generateStaticParams() {\n  return source.generateParams();\n}\n\nexport async function generateMetadata(\n  props: PageProps<'/ml/[[...slug]]'>,\n): Promise<Metadata> {\n  const params = await props.params;\n  const page = source.getPage(params.slug);\n  if (!page) notFound();\n\n  return {\n    title: page.data.title,\n    description: page.data.description,\n    openGraph: {\n      images: getPageImage(page).url,\n    },\n  };\n}\n"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AAAA;AAMA;AAAA;AACA;AAEA;;;;;;;AAEe,eAAe,KAAK,KAAmC;IACpE,MAAM,SAAS,MAAM,MAAM,MAAM;IACjC,MAAM,OAAO,uHAAM,CAAC,OAAO,CAAC,OAAO,IAAI;IACvC,IAAI,CAAC,MAAM,IAAA,iMAAQ;IAEnB,MAAM,MAAM,KAAK,IAAI,CAAC,IAAI;IAE1B,qBACE,8OAAC,0JAAQ;QAAC,KAAK,KAAK,IAAI,CAAC,GAAG;QAAE,MAAM,KAAK,IAAI,CAAC,IAAI;;0BAChD,8OAAC,2JAAS;0BAAE,KAAK,IAAI,CAAC,KAAK;;;;;;0BAC3B,8OAAC,iKAAe;0BAAE,KAAK,IAAI,CAAC,WAAW;;;;;;0BACvC,8OAAC,0JAAQ;0BACP,cAAA,8OAAC;oBACC,YAAY,IAAA,sIAAgB,EAAC;wBAC3B,kEAAkE;wBAClE,GAAG,IAAA,6LAAkB,EAAC,uHAAM,EAAE;oBAChC;;;;;;;;;;;;;;;;;AAKV;AAEO,eAAe;IACpB,OAAO,uHAAM,CAAC,cAAc;AAC9B;AAEO,eAAe,iBACpB,KAAmC;IAEnC,MAAM,SAAS,MAAM,MAAM,MAAM;IACjC,MAAM,OAAO,uHAAM,CAAC,OAAO,CAAC,OAAO,IAAI;IACvC,IAAI,CAAC,MAAM,IAAA,iMAAQ;IAEnB,OAAO;QACL,OAAO,KAAK,IAAI,CAAC,KAAK;QACtB,aAAa,KAAK,IAAI,CAAC,WAAW;QAClC,WAAW;YACT,QAAQ,IAAA,6HAAY,EAAC,MAAM,GAAG;QAChC;IACF;AACF","debugId":null}}]
}